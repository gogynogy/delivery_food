from aiogram import types

from keyboard.user.userCallBack import salat, fruit
from SQLBD import SQL
from menu import price

BD = SQL()

start_message = '–ü—Ä–∏–≤–µ—Ç üëãüèª\n–ü–æ –±—É–¥–Ω—è–º –º—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ë–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∏ —Ä–∞–∑–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏ –ø–æ –≤—Å–µ–π Unawatuna üèù\n–° 13:00- 15:00 –∏' \
                '16:00 - 17:00 ‚è∞\n–ó–∞–∫–∞–∑—ã –≥–æ—Ç–æ–≤—è—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å ‚û°Ô∏è\n–ó–∞–∫–∞–∂–∏ —Å–µ–≥–æ–¥–Ω—è –º–µ–Ω—é –Ω–∞ –∑–∞–≤—Ç—Ä–∞.\n–ú–µ–Ω—éüë®üèª‚Äçüç≥' \
                '–°–æ—Å—Ç–∞–≤–Ω–æ–π —Å–∞–ª–∞—Ç, –≤—ã–±–æ—Ä –∏–∑ –¥–≤—É—Ö —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä—è—á–∏—Ö –±–ª—é–¥ –∏ –¥–µ—Å–µ—Ä—Ç —Å –Ω–∞–ø–∏—Ç–∫–æ–º –Ω–∞  –≤—ã–±–æ—Ä.\n' \
                '–í –º–µ–Ω—é –≤—Ö–æ–¥—è—Ç –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–µ –ø–æ–∑–∏—Ü–∏–∏ ü•ó\n–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é:\nüòµ‚Äçüí´ –ü–æ—Ö–º–µ–ª—å–Ω—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n' \
                'üåÆ –¢–∞–∫–æ —Ç—å—é—Å–¥–µ–π\nü•ü –ü–µ–ª—å–º–µ–Ω–Ω–∞—è —Å—Ä–µ–¥–∞\nüçù –ü–∞—Å—Ç–∞ —á–µ—Ç–≤–µ—Ä–≥\nüçõ –†–∏—Å–æ–≤–∞—è –ø—è—Ç–Ω–∏—Ü–∞\n' \
                '–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞ –º–µ–Ω—é 4800 —Ä—É–ø–∏–π —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π.\n' \
                '–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ —Ä—É–ø–∏—è–º–∏ –∏–ª–∏ —Ä—É–±–ª—è–º–∏ –æ–Ω–ª–∞–π–Ω –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ.'
start_order_message = '–í—ã–±–µ—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ:'
second_order_message = '–í—ã–±–µ—Ä–∏ –≤—Ç–æ—Ä–æ–µ –±–ª—é–¥–æ:'
choise_salat_topping = '–í—ã–±–µ—Ä–∏ —Ç–æ–ø–ø–∏–Ω–≥ –¥–ª—è —Å–∞–ª–∞—Ç–∞:'
third_order_message = '–ß—Ç–æ —Ç—ã –±—É–¥–µ—à—å –ø–∏—Ç—å?'
what_time_delivered = '–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ—Å—Ç–∞–≤–∫–∏:'
ask_contact = 'ask contact'
ask_location = '–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–µ–π –ª–æ–∫–∞—Ü–∏–µ–π:'
weekend_message = 'weekend message'

def give_salat(user_id):
    salats = salat(user_id)
    list = []
    for i in salats:
        if salat(user_id)[i] == 1:
            list.append(i)
    if list == []:
        return None
    str = ", ".join(list)
    return str

def give_fruit(user_id):
    salats = fruit(user_id)
    list = []
    for i in salats:
        if fruit(user_id)[i] == 1:
            list.append(i)
    if list == []:
        return None
    str = ", ".join(list)
    return str


def start_message_if_order(id):
    orders = BD.give_order(id)
    text = 'your order all ready exist:\n\n'
    n = 0
    for order in orders:
        n += 1
        texts = f'–ó–∞–∫–∞–∑ ‚Ññ{n}\n' \
                f'–°–∞–ª–∞—Ç: {order[3]}\n' \
                f'–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ: {order[4]}\n' \
                f'–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –±–ª—é–¥–æ: {order[5]}\n' \
                f'–ü–∏—Ç—å: {order[6]}\n\n'
        text += ''.join(texts)
    return text


def admin_order_text(message: types.Message):
    orders = BD.give_order(message.chat.id)
    text = ' '
    if message.chat.username:
        text = f'@{message.chat.username} \n'
    n = 0
    for order in orders:
        n += 1
        texts = f'–ó–∞–∫–∞–∑ ‚Ññ{n}\n' \
                f'–°–∞–ª–∞—Ç: {order[3]}\n' \
                f'–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ: {order[4]}\n' \
                f'–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –±–ª—é–¥–æ: {order[5]}\n' \
                f'–ü–∏—Ç—å: {order[6]}\n\n'
        text += ''.join(texts)
        del_time = order[7]
    cost = price * n
    text += f'–û–±—â–∞—è —Å—É–º–º–∞: {cost} LKR.\n–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ {del_time}'
    return text


def start_salat_message(user_id):
    salat = give_salat(user_id)
    if salat == None:
        return "–°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Å–∞–ª–∞—Ç"
    return f'–°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Å–∞–ª–∞—Ç:\n{salat}\n–ú–∞–∫—Å–∏–º—É–º 5 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤'

def start_fruit_message(user_id):
    fruit = give_fruit(user_id)
    if fruit == []:
        return "–°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ñ—Ä—É–∫—Ç–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫"
    return f'–°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ñ—Ä—É–∫—Ç–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫:\n{fruit}\n–ú–∞–∫—Å–∏–º—É–º 2 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞'

def give_order_text(id):
    mainmenu = BD.give_work_order(id)
    if not mainmenu[4]:
        text = f'–°–∞–ª–∞—Ç: {give_salat(id)}, {BD.give_topping(id)}\n' \
               f'–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ: {mainmenu[3]}\n' \
               f'–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –±–ª—é–¥–æ: {give_fruit(id)}\n' \
               f'–ü–∏—Ç—å: {mainmenu[5]}'
    else:
        text = f'–°–∞–ª–∞—Ç: {give_salat(id)}, {BD.give_topping(id)}\n' \
               f'–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ: {mainmenu[3]}\n' \
               f'–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –±–ª—é–¥–æ: {mainmenu[4]}\n' \
               f'–ü–∏—Ç—å: {mainmenu[5]}'
    return text
